@page
@model Final_Project2.Pages.Tickets.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form>
    <p>
        CampusName: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<form>
	<select asp-for="CurrentSort" asp-items="Model.SortList">
		<option value="">sort by...</option>
	</select>
	<button type="submit">Sort</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Ticket[0].Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ticket[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ticket[0].RoomNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ticket[0].CampusName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ticket[0].RequestType)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Ticket) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoomNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CampusName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestType)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.TicketId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.TicketId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.TicketId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<hr />

@{
    // If we are on page 1, prevDisabled will be set to the "disabled" class
    // otherwise, it will be empty. So our previous button will be enabled or disabled based on this logic
    var prevDisabled = "";
    if (Model.PageNum <= 1)
    {
        prevDisabled = "disabled";
    }
}

@{
   
    var nextDisabled = "";
    if (Model.PageNum >= 3)
    {
        nextDisabled = "disabled";
    }
}

<nav aria-label="Page navigation example">
  <ul class="pagination">
    <li class="page-item @prevDisabled"><a class="page-link" asp-page="./Index" asp-route-PageNum="@(Model.PageNum - 1)">Previous</a></li>
    <li class="page-item @nextDisabled"><a class="page-link" asp-page="./Index" asp-route-PageNum="@(Model.PageNum + 1)">Next</a></li>
  </ul>
</nav>






